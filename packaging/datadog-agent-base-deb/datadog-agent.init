#!/bin/sh

### BEGIN INIT INFO
# Provides: dd-agent
# Short-Description: Start and start dd-agent
# Description: dd-agent is the monitoring agent component for Datadog
# Required-Start: $remote_fs
# Required-Stop: $remote_fs
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
### END INIT INFO

. /lib/lsb/init-functions
PATH=$PATH:/sbin # add the location of start-stop-daemon on Debian

AGENTPATH="/usr/bin/dd-agent"
DOGSTATSDPATH="/usr/bin/dogstatsd"
AGENTUSER="dd-agent"
AGENTCONF="/etc/dd-agent/datadog.conf"
USE_SUPERVISOR="/usr/bin/dd-forwarder"
NAME="datadog-agent"
DESC="Datadog agent"
DDAGENT_PID_PATH="/var/run/dd-agent"
SUPERVISOR_PIDFILE="/var/run/datadog-supervisord.pid"
SUPERVISOR_FILE="/etc/dd-agent/supervisor_ddagent.conf"
SUPERVISOR_SOCK="/var/tmp/datadog-supervisor.sock"
SUPERVISORD="/usr/bin/supervisord"

[ -x $AGENTPATH ] || echo "$AGENTPATH not found"

check_status() {
    if [ -f $USE_SUPERVISOR ]; then
        # If the socket exists, we can use supervisorctl
        if [ -e $SUPERVISOR_SOCK ]; then
            # If we're using supervisor, check the number of datadog processes
            # supervisor is currently controlling, and make sure that it's the
            # same as the number of programs specified in the supervisor config
            # file:

            supervisor_processes=$(supervisorctl -c $SUPERVISOR_FILE status)
            datadog_supervisor_processes=$(echo "$supervisor_processes" |
                                           grep -v pup |
                                           grep $NAME |
                                           grep -c RUNNING)
            supervisor_config_programs=$(grep -v pup $SUPERVISOR_FILE |
                                         grep -c '\[program:')

            if [ "$datadog_supervisor_processes" -ne "$supervisor_config_programs" ]; then
                echo "$supervisor_processes"
                echo "$DESC (supervisor) is NOT running all child processes"
                return 1
            else
                echo "$DESC (supervisor) is running all child processes"
                return 0
            fi
        else
            echo "$DESC (supervisor) is not running"
            return 1
        fi
    else
        # If we're not using supervisor, use the agent and dogstatsd status
        # commands:

        su $AGENTUSER -c "$AGENTPATH status > /dev/null 2>&1"
        agent_exit_code=$?
        su $AGENTUSER -c "$DOGSTATSDPATH status > /dev/null 2>&1"
        dogstatsd_exit_code=$?
        if [ $agent_exit_code -eq 1 ] && [ $dogstatsd_exit_code -eq 1 ]; then
            echo "$DESC is NOT running all child processes"
            return 1
        else
            echo "$DESC is running all child processes"
            return 0
        fi
    fi
}


# Action to take
case "$1" in
    start)
        check_status > /dev/null
        if [ $? -eq 0 ]; then
            echo "$DESC is already running"
            exit 1
        fi

        echo -n "Starting $DESC"
        set -e
        if [ -f $USE_SUPERVISOR ]; then
            # We don't need to check if the supervisor is already running, as
            # the following command will error if the required port is in use
            echo '(using supervisord):'
            start-stop-daemon --start --exec $SUPERVISORD -- -c $SUPERVISOR_FILE --pidfile $SUPERVISOR_PIDFILE
        else
            echo
            if [ ! -f $DDAGENT_PID_PATH ]; then
                mkdir -p $DDAGENT_PID_PATH
            fi
            chown $AGENTUSER $DDAGENT_PID_PATH
            su $AGENTUSER -c "env LANG=POSIX $AGENTPATH start init --clean > /dev/null 2>&1"
            su $AGENTUSER -c "env LANG=POSIX $DOGSTATSDPATH start > /dev/null 2>&1"
        fi

        SLEEP=7
        echo "Waiting $SLEEP seconds to test for running child processes..."
        sleep $SLEEP
        check_status
        exit $?
        ;;
    stop)
        echo -n "Stopping $DESC "
        set -e
        if [ -f $USE_SUPERVISOR ]; then
            echo "(stopping supervisord) "
            # start-stop-daemon will notify the user if the supervisor isn't found,
            # so we don't have to explicitly check
            start-stop-daemon --stop --pidfile $SUPERVISOR_PIDFILE
        else
            echo
            su $AGENTUSER -c "$AGENTPATH stop init > /dev/null 2>&1"
            su $AGENTUSER -c "$DOGSTATSDPATH stop > /dev/null 2>&1"
        fi

        echo "$DESC stopped"
        exit 0

        ;;

    info)
        su $AGENTUSER -c "$AGENTPATH info"
        su $AGENTUSER -c "$DOGSTATSDPATH info"
        if [ -f $USE_SUPERVISOR ]; then
            su $AGENTUSER -c "$USE_SUPERVISOR info"
        fi
        ;;

    status)
        check_status
        exit $?
        ;;

    restart|force-reload)
        $0 stop
        $0 start
        ;;
    *)
        N=/etc/init.d/$NAME
        echo "Usage: $N {start|stop|restart|info|status}"
        exit 1
        ;;
esac

exit 0

